"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var app = getApp();
var PlayMode;
(function (PlayMode) {
    PlayMode["easy"] = "easy";
    PlayMode["common"] = "common";
    PlayMode["custom"] = "custom";
})(PlayMode || (PlayMode = {}));
var playModeList = [
    { key: PlayMode.easy, value: "容易" },
    { key: PlayMode.common, value: "普通" },
    { key: PlayMode.custom, value: "自定义" },
];
Page({
    data: {
        title: "",
        questionList: [],
        showPlay: false,
        showCustom: true,
        showSelect: false,
        playModeList: playModeList,
        pickedPlayModeListIndex: 0,
        setting: {
            canJump: true,
            canShowAnswer: true,
            isReverse: false,
            ignoreUpLow: false,
        },
    },
    onLoad: function (options) {
        console.log("manage onload", options);
    },
    onShow: function () {
        console.log("on show start");
        var index = app.globalData.currentMemoryIndex;
        var store = wx.getStorageSync("memory");
        var memory = (store || [])[index];
        console.log("index", index);
        console.log("store", store);
        this.setData(memory);
        wx.setNavigationBarTitle({ title: memory.title });
        console.log("on show end");
    },
    onTapUpdate: function () {
        wx.navigateTo({ url: "/pages/project/create/create?type=update" });
    },
    onTapDelete: function () {
        var key = "memory";
        var memory = wx.getStorageSync(key);
        memory.splice(app.globalData.currentMemoryIndex, 1);
        try {
            wx.setStorageSync(key, memory);
            wx.showToast({
                icon: "none",
                title: "删除成功!",
                duration: 1500,
            });
            setTimeout(wx.navigateBack, 1500);
        }
        catch (e) {
            wx.showToast({ icon: "none", title: "删除失败!" });
        }
    },
    onTapStart: function () {
        this.setData({ showPlay: !this.data.showPlay });
    },
    bindPickerChange: function (_a) {
        var detail = _a.detail;
        var value = parseInt(detail.value);
        this.setData({
            pickedPlayModeListIndex: value,
            showCustom: value === playModeList.findIndex(function (item) { return item.key === PlayMode.custom; }),
        });
    },
    selectorSwitch: function () {
        this.setData({
            showSelect: !this.data.showSelect,
        });
    },
    onSelectorFinish: function (e) {
        var questionList = e.detail;
        this.setData({
            questionList: questionList,
        });
        var key = "memory";
        var memory = wx.getStorageSync(key) || [];
        var index = app.globalData.currentMemoryIndex;
        memory[index].questionList = questionList;
        wx.setStorageSync(key, memory);
    },
    onTapSetting: function (e) {
        var setting = this.data.setting;
        var key = e.currentTarget.dataset.key;
        setting[key] = !setting[key];
        this.setData({ setting: setting });
    },
    onInputSetting: function (e) {
        var setting = this.data.setting;
        var key = e.currentTarget.dataset.key;
        var value = e.detail.value;
        setting[key] = parseInt(value);
        this.setData({ setting: setting });
    },
});
//# sourceMappingURL=data:application/json;base64,